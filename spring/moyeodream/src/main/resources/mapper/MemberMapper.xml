<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.moyeodream.mapper.MemberMapper">

    <insert id="insert">
        <selectKey keyProperty="memberNumber" order="BEFORE" resultType="_int">
            SELECT SEQ_MEMBER.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO TBL_MEMBER
        (MEMBER_NUMBER, MEMBER_EMAIL, MEMBER_NICKNAME, MEMBER_PROFILE, MEMBER_INTERESTS)
        VALUES (#{memberNumber}, #{memberEmail}, #{memberNickname}, #{memberProfile}, #{memberInterests})
    </insert>

    <select id="login" resultType="_int">
        SELECT MEMBER_NUMBER
        FROM TBL_MEMBER
        WHERE MEMBER_EMAIL = #{memberEmail}
    </select>

    <select id="checkEmail" resultType="_int">
        SELECT COUNT(MEMBER_EMAIL)
        FROM TBL_MEMBER
        WHERE MEMBER_EMAIL = #{memberEmail}
    </select>

    <select id="checkProfile" resultType="string">
        SELECT MEMBER_PROFILE FROM TBL_MEMBER
        WHERE MEMBER_NUMBER = #{memberNumber}
    </select>

    <select id="getMyStudyList" resultType="studyDTO">
        SELECT /*+ INDEX_DESC(ts PK_STUDY) */
        STUDY_NUMBER, STUDY_CATEGORY, STUDY_START, STUDY_PERSONNEL, STUDY_TITLE, STUDY_APPROVE, STUDY_VIEWS, ts.STUDY_MEMBER_NUMBER, tm.MEMBER_NICKNAME, tm.MEMBER_PROFILE
        FROM TBL_STUDY ts JOIN TBL_MEMBER tm
        ON ts.STUDY_MEMBER_NUMBER = tm.MEMBER_NUMBER
        WHERE tm.MEMBER_NUMBER = #{memberNumber}
    </select>

    <select id="select" resultType="memberVO">
        SELECT MEMBER_NUMBER, MEMBER_EMAIL, MEMBER_NICKNAME, MEMBER_INTERESTS, MEMBER_PROFILE
        FROM TBL_MEMBER
        WHERE MEMBER_NUMBER = #{memberNumber}
    </select>

    <update id="update">
        UPDATE TBL_MEMBER
        SET MEMBER_NICKNAME = #{memberNickname}, MEMBER_INTERESTS = #{memberInterests}, MEMBER_PROFILE = #{memberProfile}
        WHERE MEMBER_NUMBER = #{memberNumber}
    </update>

    <delete id="delete">
        DELETE FROM TBL_MEMBER
        WHERE MEMBER_NUMBER = #{memberNumber}
    </delete>

    <select id="selectMyStudy0" resultType="_int">
        SELECT NVL(STUDY_DATA, 0)
        FROM(
            SELECT COUNT(CASE WHEN ts.STUDY_APPROVE = '0' THEN 1 END) AS STUDY_DATA
            FROM TBL_STUDY ts JOIN TBL_MEMBER tm
            ON ts.STUDY_MEMBER_NUMBER = tm.MEMBER_NUMBER
            WHERE MEMBER_NUMBER = #{memberNumber}
        )
    </select>

    <select id="selectMyStudy1" resultType="_int">
        SELECT NVL(STUDY_DATA, 0)
        FROM(
            SELECT COUNT(CASE WHEN ts.STUDY_APPROVE = '1' THEN 1 END) AS STUDY_DATA
            FROM TBL_STUDY ts JOIN TBL_MEMBER tm
            ON ts.STUDY_MEMBER_NUMBER = tm.MEMBER_NUMBER
            WHERE MEMBER_NUMBER = #{memberNumber}
        )
    </select>

    <!--내 게시물 목록-->
    <select id="getMyPostList" parameterType="map" resultType="postDTO">
        SELECT RN, POST_NUMBER, POST_CATEGORY, POST_TITLE, POST_CONTENT, POST_VIEWS, POST_REGISTER_DATE, POST_UPDATE_DATE, POST_MEMBER_NUMBER, MEMBER_NICKNAME
        FROM
        (
            SELECT /*+ INDEX_DESC(tp PK_POST) */
            ROWNUM RN, POST_NUMBER, POST_CATEGORY, POST_TITLE, POST_CONTENT, POST_VIEWS, POST_REGISTER_DATE, POST_UPDATE_DATE, tp.POST_MEMBER_NUMBER, tm.MEMBER_NICKNAME
            FROM TBL_POST tp JOIN TBL_MEMBER tm
            ON tp.POST_MEMBER_NUMBER = tm.MEMBER_NUMBER
            WHERE tm.MEMBER_NUMBER = #{memberNumber}
            AND <![CDATA[ ROWNUM <= #{criteria.pageNum} * #{criteria.amount}
        )
        WHERE RN > ((#{criteria.pageNum} -1) * #{criteria.amount})
        ORDER BY RN
        ]]>
    </select>

    <!--내 게시글 개수-->
    <select id="getMyPostCount" resultType="_int">
        SELECT COUNT(tp.POST_NUMBER)
        FROM TBL_POST tp JOIN TBL_MEMBER tm
        ON tp.POST_MEMBER_NUMBER = tm.MEMBER_NUMBER
        WHERE MEMBER_NUMBER = #{memberNumber}
    </select>

    <!--선택한 게시글 삭제-->
    <delete id="deleteBoard">
		DELETE FROM TBL_POST
		WHERE POST_NUMBER = #{postNumber}
	</delete>

    <!--내 댓글 목록-->
    <select id="getMyCommentList" parameterType="map" resultType="postDTO">
        SELECT RN, POST_NUMBER, POST_CATEGORY, POST_TITLE, POST_CONTENT, POST_VIEWS, POST_REGISTER_DATE, POST_UPDATE_DATE, POST_MEMBER_NUMBER, MEMBER_NICKNAME, POST_COMMENT_CONTENT
        FROM
        (
            SELECT /*+ INDEX_DESC(tp PK_POST) */
            ROWNUM RN, POST_NUMBER, POST_CATEGORY, POST_TITLE, POST_CONTENT, POST_VIEWS, POST_REGISTER_DATE, POST_UPDATE_DATE, tp.POST_MEMBER_NUMBER, tm.MEMBER_NICKNAME, tpc.POST_COMMENT_CONTENT
            FROM TBL_POST tp JOIN TBL_MEMBER tm
            ON tp.POST_MEMBER_NUMBER = tm.MEMBER_NUMBER
            JOIN TBL_POST_COMMENT tpc
            ON tp.POST_NUMBER = tpc.POST_COMMENT_POST_NUMBER
            WHERE tpc.POST_COMMENT_MEMBER_NUMBER = #{memberNumber}
            AND <![CDATA[ ROWNUM <= #{criteria.pageNum} * #{criteria.amount}
        )
        WHERE RN > ((#{criteria.pageNum} -1) * #{criteria.amount})
        ORDER BY RN
        ]]>
    </select>


    <!--내 댓글 개수-->
    <select id="getMyCommentCount" resultType="_int">
        SELECT COUNT(tp.POST_NUMBER)
        FROM TBL_POST tp JOIN TBL_MEMBER tm
        ON tp.POST_MEMBER_NUMBER = tm.MEMBER_NUMBER
        JOIN TBL_POST_COMMENT tpc
        ON tm.MEMBER_NUMBER = tpc.POST_COMMENT_MEMBER_NUMBER
        WHERE tpc.POST_COMMENT_MEMBER_NUMBER = #{memberNumber}
    </select>

</mapper>