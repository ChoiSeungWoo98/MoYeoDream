<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.moyeodream.mapper.StudyMapper">
    <select id="getList" resultType="studyDTO">
        SELECT STUDY_NUMBER, STUDY_CATEGORY, STUDY_PROCESS, STUDY_START, STUDY_PERIOD, STUDY_PERSONNEL, STUDY_COMMUNICATION, STUDY_TITLE, STUDY_CONTENT, STUDY_APPROVE, STUDY_VIEWS, STUDY_REGISTER_DATE, STUDY_UPDATE_DATE, STUDY_MEMBER_NUMBER, STUDY_CHIEF, STUDY_COMMENT_NUMBER, STUDY_COMMENT_STUDY_NUMBER, MEMBER_NICKNAME
        FROM TBL_STUDY ts LEFT OUTER JOIN TBL_STUDY_COMMENT tc
        ON ts.STUDY_NUMBER = tc.STUDY_COMMENT_STUDY_NUMBER
        LEFT OUTER JOIN TBL_MEMBER tm
        ON STUDY_MEMBER_NUMBER = tm.MEMBER_NUMBER
        WHERE STUDY_APPROVE = 1
    </select>

    <select id="getListView" resultType="studyDTO">
        SELECT
        STUDY_NUMBER, STUDY_CATEGORY, STUDY_PROCESS, STUDY_START, STUDY_PERIOD, STUDY_PERSONNEL, STUDY_COMMUNICATION, STUDY_TITLE, STUDY_CONTENT, STUDY_APPROVE, STUDY_VIEWS, STUDY_REGISTER_DATE, STUDY_UPDATE_DATE, STUDY_MEMBER_NUMBER, STUDY_CHIEF, STUDY_COMMENT_NUMBER, STUDY_COMMENT_STUDY_NUMBER, MEMBER_NICKNAME
        FROM TBL_STUDY ts LEFT OUTER JOIN TBL_STUDY_COMMENT tc
        ON ts.STUDY_NUMBER = tc.STUDY_COMMENT_STUDY_NUMBER
        LEFT OUTER JOIN TBL_MEMBER tm
        ON STUDY_MEMBER_NUMBER = tm.MEMBER_NUMBER
        WHERE STUDY_APPROVE = 1
        ORDER BY STUDY_VIEWS DESC
    </select>

    <select id="getListLatest" resultType="studyDTO">
        SELECT
        STUDY_NUMBER, STUDY_CATEGORY, STUDY_PROCESS, STUDY_START, STUDY_PERIOD, STUDY_PERSONNEL, STUDY_COMMUNICATION, STUDY_TITLE, STUDY_CONTENT, STUDY_APPROVE, STUDY_VIEWS, STUDY_REGISTER_DATE, STUDY_UPDATE_DATE, STUDY_MEMBER_NUMBER, STUDY_CHIEF, STUDY_COMMENT_NUMBER, STUDY_COMMENT_STUDY_NUMBER, MEMBER_NICKNAME
        FROM TBL_STUDY ts LEFT OUTER JOIN TBL_STUDY_COMMENT tc
        ON ts.STUDY_NUMBER = tc.STUDY_COMMENT_STUDY_NUMBER
        LEFT OUTER JOIN TBL_MEMBER tm
        ON STUDY_MEMBER_NUMBER = tm.MEMBER_NUMBER
        WHERE STUDY_APPROVE = 1
        ORDER BY STUDY_UPDATE_DATE DESC
    </select>

    <insert id="insert">
        <selectKey keyProperty="studyNumber" order="BEFORE" resultType="_int">
            SELECT SEQ_STUDY.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO TBL_STUDY (STUDY_NUMBER, STUDY_CATEGORY, STUDY_PROCESS, STUDY_PERSONNEL, STUDY_START, STUDY_COMMUNICATION, STUDY_PERIOD, STUDY_CHIEF, STUDY_TITLE, STUDY_CONTENT, STUDY_MEMBER_NUMBER)
        VALUES (#{studyNumber}, #{studyCategory}, #{studyProcess}, #{studyPersonnel}, #{studyStart}, #{studyCommunication}, #{studyPeriod}, #{studyChief}, #{studyTitle}, #{studyContent}, #{studyMemberNumber})
    </insert>

    <select id="select" resultType="studyDTO">
        SELECT STUDY_NUMBER, STUDY_CATEGORY, STUDY_PROCESS, STUDY_START, STUDY_PERIOD, STUDY_PERSONNEL, STUDY_COMMUNICATION, STUDY_TITLE, STUDY_CONTENT, STUDY_APPROVE, STUDY_VIEWS, STUDY_REGISTER_DATE, STUDY_UPDATE_DATE, STUDY_MEMBER_NUMBER, STUDY_CHIEF, STUDY_CHECK
        FROM TBL_STUDY
        WHERE STUDY_NUMBER = #{studyNumber}
    </select>

    <select id="selectNickname" resultType="string">
        SELECT MEMBER_NICKNAME FROM TBL_MEMBER
        WHERE MEMBER_NUMBER = #{studyMemberNumber}
    </select>

    <update id="update">
        UPDATE TBL_STUDY
        SET STUDY_CATEGORY = #{studyCategory}, STUDY_PROCESS = #{studyProcess}, STUDY_PERSONNEL = #{studyPersonnel}, STUDY_START = #{studyStart}, STUDY_COMMUNICATION = #{studyCommunication}, STUDY_PERIOD = #{studyPeriod}, STUDY_CHIEF = #{studyChief}, STUDY_TITLE = #{studyTitle}, STUDY_CONTENT = #{studyContent}
        WHERE STUDY_NUMBER = #{studyNumber}
    </update>

    <delete id="delete">
        DELETE FROM TBL_STUDY
        WHERE STUDY_NUMBER = #{studyNumber}
    </delete>

    <!-- 어드민에서 검색-->
    <sql id="adminSearch">
        <if test="type != null and keyword != null">
            <trim prefix="(" suffix=") AND " prefixOverrides="OR">
                <foreach item="type" collection="types">
                    <trim prefix="OR">
                        <choose>
                            <when test="type == 'T'.toString()">
                                (STUDY_TITLE LIKE '%'||#{keyword}||'%')
                            </when>
                            <when test="type == 'G'.toString()">
                                (STUDY_CATEGORY LIKE '%'||#{keyword}||'%')
                            </when>
                            <when test="type == 'W'.toString()">
                                (MEMBER_NICKNAME LIKE '%'||#{keyword}||'%')
                            </when>
                            <when test="type == 'A'.toString()">
                                (STUDY_APPROVE = 1 AND STUDY_CHECK = 0)
                            </when>
                            <when test="type == 'S'.toString()">
                                (STUDY_APPROVE = 0 AND STUDY_CHECK = 0)
                            </when>
                            <when test="type == 'C'.toString()">
                                (STUDY_CHECK = 1)
                            </when>
                        </choose>
                    </trim>
                </foreach>
            </trim>
        </if>
    </sql>

    <select id="getApproveWait" resultType="studyVO">
        SELECT STUDY_NUMBER, STUDY_CATEGORY, STUDY_PROCESS, STUDY_START, STUDY_PERIOD, STUDY_PERSONNEL, STUDY_COMMUNICATION, STUDY_TITLE, STUDY_CONTENT, STUDY_APPROVE, STUDY_VIEWS, STUDY_REGISTER_DATE, STUDY_UPDATE_DATE, STUDY_MEMBER_NUMBER, STUDY_CHIEF
        FROM
            (
            SELECT /*+ INDEX_DESC(TBL_STUDY PK_STUDY) */
            ROWNUM RN, STUDY_NUMBER, STUDY_CATEGORY, STUDY_PROCESS, STUDY_START, STUDY_PERIOD, STUDY_PERSONNEL, STUDY_COMMUNICATION, STUDY_TITLE, STUDY_CONTENT, STUDY_APPROVE, STUDY_VIEWS, STUDY_REGISTER_DATE, STUDY_UPDATE_DATE, STUDY_MEMBER_NUMBER, STUDY_CHIEF, STUDY_CHECK
            FROM TBL_STUDY
            <![CDATA[
            WHERE STUDY_APPROVE = 0
            )
        WHERE RN <= 10
        ]]>
    </select>

    <select id="getStudyList" resultType="StudyDTO">
        SELECT /*+ INDEX_DESC(TBL_STUDY PK_STUDY) */
        ROWNUM RN, ROWNUM RN, STUDY_NUMBER, STUDY_CATEGORY, STUDY_PROCESS, STUDY_START, STUDY_PERIOD, STUDY_PERSONNEL, STUDY_COMMUNICATION, STUDY_TITLE, STUDY_CONTENT, STUDY_APPROVE, STUDY_VIEWS, STUDY_REGISTER_DATE, STUDY_UPDATE_DATE, STUDY_MEMBER_NUMBER, STUDY_CHIEF, STUDY_CHECK, MEMBER_NICKNAME
        FROM
        (
        SELECT /*+ INDEX_DESC(TBL_STUDY PK_STUDY) */
        ROWNUM RN, STUDY_NUMBER, STUDY_CATEGORY, STUDY_PROCESS, STUDY_START, STUDY_PERIOD, STUDY_PERSONNEL, STUDY_COMMUNICATION, STUDY_TITLE, STUDY_CONTENT, STUDY_APPROVE, STUDY_VIEWS, STUDY_REGISTER_DATE, STUDY_UPDATE_DATE, STUDY_MEMBER_NUMBER, STUDY_CHIEF, STUDY_CHECK, MEMBER_NICKNAME
        FROM TBL_STUDY ts JOIN TBL_MEMBER tm
        ON ts.STUDY_MEMBER_NUMBER = tm.MEMBER_NUMBER
        WHERE
            <include refid="adminSearch"/>
        <![CDATA[
            ROWNUM <= #{pageNum} * #{amount}
        )
        WHERE RN > (#{pageNum} - 1) * #{amount}
    ]]>
    </select>

    <select id="getTotal" resultType="_int">
        SELECT COUNT(STUDY_NUMBER)
        FROM TBL_STUDY ts JOIN TBL_MEMBER tm
        ON ts.STUDY_MEMBER_NUMBER = tm.MEMBER_NUMBER
        <where>
            <trim suffixOverrides="AND">
                <include refid="adminSearch"/>
            </trim>
        </where>
    </select>

    <update id="approve">
        UPDATE TBL_STUDY
        SET STUDY_APPROVE = 1
        WHERE STUDY_NUMBER = #{studyNumber}
    </update>

    <select id="getApprove" resultType="_int">
        SELECT STUDY_APPROVE FROM TBL_STUDY
        WHERE STUDY_NUMBER = #{studyNumber}
    </select>

    <update id="check">
        UPDATE TBL_STUDY
        SET STUDY_CHECK = 1, STUDY_APPROVE = 0
        WHERE STUDY_NUMBER = #{studyNumber}
    </update>
</mapper>